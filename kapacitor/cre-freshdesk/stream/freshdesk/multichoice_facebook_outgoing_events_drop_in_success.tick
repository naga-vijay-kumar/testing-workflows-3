var outgoing = stream
  |from()
    .database('cre-freshdesk')
    .measurement('cre_cf_sherlock_outgoing_note_events_total')
  |where(lambda: "account_id" == '986130' AND "source" == 'facebook')
  |derivative('counter')
    .unit(10m)
    .nonNegative()
    .as('outgoingEvents')
  |window()
    .period(5m)
    .every(5m)
  |mean('outgoingEvents')
    .as('outgoingEvents')


var successfullyDelivered = stream
  |from()
    .database('cre-freshdesk')
    .measurement('cre_cf_sherlock_outgoing_notes_status_events_total')
  |where(lambda: "account_id" == '986130' AND "source" == 'facebook' AND "status" == 'success')
  |derivative('counter')
    .unit(10m)
    .nonNegative()
    .as('successfullyDeliveredEvents')
  |window()
    .period(5m)
    .every(5m)
  |mean('successfullyDeliveredEvents')
    .as('successfullyDeliveredEvents')


outgoing
  |join(successfullyDelivered)
    .as('outgoing', 'successfullyDelivered')
    .tolerance(1s)
    .fill(0.0)
    .streamName('percentage')
  |eval(lambda: "successfullyDelivered.value"/"outgoing.value"*100)
    .as('percentage')
  |stateDuration(lambda: "percentage" < 90)
    .unit(1m)
  |alert()
    .message('[ {{ .Time }} ] [multichoice_facebook_outgoing_events_drop_in_success] [ Percentage of success in delivering dms/comments to FB is below 90% for 5 mins ] [Current success rate] {{ index .Fields "percentage" }} {{ .Level }}')
    .warn(lambda: "state_duration" >= 5)
    .warnReset(lambda: "state_duration" == 0)
    .stateChangesOnly()
    .topic('cre-freshdesk')
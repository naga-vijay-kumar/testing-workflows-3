var db = 'staging-freshdesk'


var measurement = 'envoy.http.downstream_rq_xx'

var groupBy = ['region']

var whereFilter = lambda: ("region" == 'us-east-1') AND ("layer" =~ /fc-app-suggest/)

var total = stream
    |from()
        .database(db)
        .measurement(measurement)
        .groupBy(groupBy)
        .where(whereFilter)
    |window()
        .period(5m)
        .every(5m)
        .align()
        .fillPeriod()
    |sum('value')
        .as('value')

var error = stream
    |from()
        .database(db)
        .measurement(measurement)
        .groupBy(groupBy)
        .where(lambda: ("region" == 'us-east-1') AND ("envoy.response_code_class" == '5' ) AND ("layer" =~ /fc-app-suggest/))
    |window()
        .period(5m)
        .every(5m)
        .align()
        .fillPeriod()
    |sum('value')
        .as('value')

var data = total
    |join(error)
        .as('total', 'error')
    |eval(lambda: "error.value" / "total.value")
        .as('rate')

data
    |alert()
        .message('[ {{ .Time }} ] [ {{ index .Tags "region" }} ] [ {{ index .Tags "cluster" }} ] [ {{ index .Tags "group" }} ] [ freshdesk_suggest_error_percentage ] - {{ index .Fields "rate" }} {{ .Level }}')
        .id('{{ .Name }}:{{ .Group }}/freshdesk_suggest_error_percentage')
        .crit(lambda: "rate" > 0.006)
        .stateChangesOnly()
        .topic('staging-freshdesk')

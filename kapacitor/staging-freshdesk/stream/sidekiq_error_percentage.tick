var db = 'staging-freshdesk'


var groupBy = ['region']

var whereFilter = lambda: ("region" == 'us-east-1')

var total = stream
    |from()
        .database(db)
        .measurement('ruby_sidekiq_jobs_total')
        .groupBy(groupBy)
        .where(whereFilter)
    |window()
        .period(5m)
        .every(5m)
        .align()
        .fillPeriod()
    |sum('gauge')
        .as('value')

var error = stream
    |from()
        .database(db)
        .measurement('ruby_sidekiq_failed_jobs_total')
        .groupBy(groupBy)
        .where(lambda: ("region" == 'us-east-1'))
    |window()
        .period(5m)
        .every(5m)
        .align()
        .fillPeriod()
    |sum('gauge')
        .as('value')

var data = total
    |join(error)
        .as('total', 'error')
    |eval(lambda: "error.value" / "total.value")
        .as('rate')

data
    |alert()
        .message('[ {{ .Time }} ] [ {{ index .Tags "region" }} ] [ {{ index .Tags "cluster" }} ] [ {{ index .Tags "group" }} ] [ freshdesk_sidekiq_error_percentage ] - {{ index .Fields "rate" }} {{ .Level }}')
        .id('{{ .Name }}:{{ .Group }}/freshdesk_sidekiq_error_percentage')
        .crit(lambda: "rate" > 0.5)
        .stateChangesOnly()
        .topic('staging-freshdesk')

var max_threads = stream
  |from()
      .database('staging-freshchat')
      .measurement('tomcat_threads_config_max')
      .groupBy('cluster','region','group','hostname')
  |window()
    .period(1m)
    .every(1m)
    .align()
    .fillPeriod()
  |mean('value')
    .as('mean_value')

var busy_threads = stream
  |from()
      .database('staging-freshchat')
      .measurement('tomcat_threads_busy')
      .groupBy('cluster','region','group','hostname')
  |window()
    .period(1m)
    .every(1m)
    .align()
    .fillPeriod()
  |mean('value')
    .as('mean_value')

max_threads
  |join(busy_threads)
    .as('max_threads','busy_threads')
  |eval(lambda: ("busy_threads.mean_value"/"max_threads.mean_value") * 100.0)
    .as('busy_threads_percent')
    .keep('busy_threads.mean_value','max_threads.mean_value')
  |alert()
    .message('[ {{ .Time }} ] [ {{ index .Tags "cluster" }} ] [ {{ index .Tags "region" }} ] [ {{ index .Tags "group" }} ][ {{ index .Tags "hostname" }} ] [ high_busy_threads_on_tomcat ] - {{ index .Fields "busy_threads.mean_value" }} {{ .Level }}')
    .id('{{ .Name }}:{{ .Group }}/high_busy_threads_on_tomcat')
    .warn(lambda: "busy_threads_percent" > 10)
    .warnReset(lambda: "busy_threads_percent" <= 9)
    .crit(lambda: "busy_threads_percent" > 12)
    .critReset(lambda: "busy_threads_percent" <= 11)
    .stateChangesOnly()
    .topic('staging-freshchat')
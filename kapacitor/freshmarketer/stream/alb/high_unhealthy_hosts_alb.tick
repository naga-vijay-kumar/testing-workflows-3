stream
    |from()
        .database('freshmarketer')
        .measurement('cloudwatch_aws_application_elb')
        .where(lambda: isPresent("un_healthy_host_count_average") AND isPresent("target_group") AND isPresent("availability_zone"))
        .groupBy('region','load_balancer','target_group','availability_zone')
    |sum('un_healthy_host_count_average')
        .as('un_healthy_host_count_average')
    |window()
        .period(5m)
        .every(5m)
    |max('un_healthy_host_count_average')
    	.as('un_healthy_hosts_count')
    |alert()
        .message('[ {{ .Time }} ] [ {{ index .Tags "region" }} ] [ {{ index .Tags "load_balancer" }} ] [ {{ index .Tags   "target_group" }} ] [ {{ index .Tags "availability_zone" }} ] [ high_unhealthy_hosts_alb ] - {{ index .Fields "un_healthy_hosts_count" }} {{ .Level }}')
	    .id('{{ .Name }}:{{ .Group }}/high_unhealthy_hosts_alb')
        .crit(lambda: "un_healthy_hosts_count" > 1)
	    .critReset(lambda: "un_healthy_hosts_count" <= 1)
	    .warn(lambda: "un_healthy_hosts_count" > 0)
	    .warnReset(lambda: "un_healthy_hosts_count" <= 0)
	    .stateChangesOnly()
	    .topic('freshmarketer')
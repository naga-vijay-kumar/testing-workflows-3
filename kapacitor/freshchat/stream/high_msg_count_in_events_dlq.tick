stream
    |from()
        .database('freshchat')
        .measurement('cloudwatch_aws_sqs')
        .where(lambda: isPresent("approximate_number_of_messages_visible_average") AND isPresent("queue_name") AND (strHasSuffix("queue_name", 'dlq')) AND strContains("queue_name", 'EVENT_QUEUE'))
        .groupBy('cluster','region','queue_name')
    |window()
        .period(5m)
        .every(1m)
    |mean('approximate_number_of_messages_visible_average')
        .as('max_visible_messages')
    |alert()
    	.message('[ {{ .Time }} ] [ {{ index .Tags "cluster" }} ] [ {{ index .Tags "region" }} ] [ {{ index .Tags "queue_name" }} ] [ high_msg_count_in_events_dlq ] - {{ index .Fields "max_visible_messages" }} {{ .Level }}')
    	.id('{{ .Name }}:{{ .Group }}/high_msg_count_in_events_dlq')
        .crit(lambda: "max_visible_messages" > 1000)
        .critReset(lambda: "max_visible_messages" <= 500)
        .warn(lambda: "max_visible_messages" > 500)
        .warnReset(lambda: "max_visible_messages" <= 200)
	    .stateChangesOnly()
	    .topic('freshchat')
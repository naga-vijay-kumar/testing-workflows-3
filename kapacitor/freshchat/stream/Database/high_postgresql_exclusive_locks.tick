stream
    |from()
        .database('freshchat')
        .measurement('postgresql_locks')
        .where(lambda: "lock_mode" == 'ExclusiveLock')
        .groupBy('cluster','region','server','table_name','lock_mode')
    |window()
        .period(1m)
        .every(1m)
    |mean('locks')
        .as('locks_acquired')
    |alert()
    	.message('[ {{ .Time }} ] [ {{ index .Tags "cluster" }} ] [ {{ index .Tags "region" }} ] [ {{ index .Tags "server" }} ] [ {{ index .Tags "lock_mode" }} ] [ {{ index .Tags "table_name" }} ] [ high_postgresql_exclusive_locks_count ] - {{ index .Fields "locks_acquired" }} {{ .Level }}')
    	.id('{{ .Name }}:{{ .Group }}/high_postgresql_exclusive_locks_count')
        .crit(lambda: "locks_acquired" >= 100)
        .critReset(lambda: "locks_acquired" < 99)
        .warn(lambda: "locks_acquired" >= 85)
        .warnReset(lambda: "locks_acquired" < 84)
	    .stateChangesOnly()
	    .topic('freshchat')
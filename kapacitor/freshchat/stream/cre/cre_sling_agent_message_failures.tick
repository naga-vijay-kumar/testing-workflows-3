stream
  |from()
    .database('freshchat')
    .measurement('freshchat_cre_errors')
  |where(lambda: "appId" == '113893843993852' AND "type" == 'Agent' OR "method" == 'ConversationAPI' OR "method" == 'AgentReply'  OR  "method" == 'BotResponseMessage' OR "method" == 'ConversationTransaction' OR "method" == 'Message' OR "method" == 'handleCalendarEventCreationOrFailureResponse' OR "method" == 'handleCalendarRetryEvent'  OR "method" == 'FreshDeskIntegration-AgentMessage' OR "method" == 'FreshServiceIntegration-AgentMessage' OR "method" == 'SlackIntegration-AgentMessage'   OR "method" == 'sendOfflineExperienceEndMessage' OR "method" == 'SmoochMessage'  OR "method" == 'AgentMessage' OR "method" == 'ZendeskIntegration-AgentMessage' )
  |groupBy('type')
  |window()
    .period(10s)
    .every(10s)
  |mean('count')
    .as('message_failures_agent')
  |alert()
    .message('[ {{ .Time }} ] [ {{ index .Tags "region" }} ] [ cre_sling_message_failures_agent ] - {{ index .Fields "message_failures_agent" }} {{ .Level }}')
    .id('{{ .Name }}:{{ .Group }}/cre_sling_message_failures_agent')
    .crit(lambda: "message_failures_agent" >= 5)
    .critReset(lambda: "message_failures_agent" == 0)
    .stateChangesOnly()
    .topic('freshchat')


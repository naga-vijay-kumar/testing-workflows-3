stream
  |from()
    .database('freshchat')
    .measurement('elasticsearch_cluster_health')
  |where(lambda: "group" == 'elasticsearch')
  |groupBy('name','tag-2','region','group')
  |window()
    .period(10s)
    .every(10s)
  |last('relocating_shards')
    .as('relocating_shards')
  |stateDuration(lambda: "relocating_shards" > 0)
   .as('state_duration')
  |alert()
    .message('[ {{ .Time }} ] [ {{ index .Tags "region" }} ] [ {{ index .Tags "tag-2" }} ] [ es_relocating_shards ] - {{ if eq .Level "OK" }} relocating_shards came down to 0{{ else }}has relocating_shards > 0 for last {{ index .Fields "state_duration" }} seconds{{ end }}. relocating_shards: {{ index .Fields "relocating_shards" }} {{ .Level }}')
    .id('{{ .Name }}:{{ .Group }}/es_relocating_shards')
    .warn(lambda: "state_duration" > 0)
    .warnReset(lambda: "state_duration" == 0)
    .crit(lambda: "state_duration" > 300 )
    .critReset(lambda: "state_duration" == 0)
    .stateChangesOnly()
    .topic('freshchat')

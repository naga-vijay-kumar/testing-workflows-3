stream
  |from()
      .database('haystack')
      .measurement('cpu')
  |where(lambda: "cpu" == 'cpu-total')
  |groupBy('host','cpu','region','group')
  |window()
    .period(1m)
    .every(1m)
  |mean('usage_idle')
    .as('usage_idle')
  |eval(lambda: "usage_idle" * -1.0 + 100.0)
    .as('cpu_utilization')
  |stateCount(lambda: "cpu_utilization" >= 90)
  |alert()
    .message('[ {{ .Time }} ] [ {{ index .Tags "region" }} ] [ {{ index .Tags "group" }} ][ {{ index .Tags "host" }} ] [ cpu_utilization_step ] - {{ index .Fields "cpu_utilization" }} {{ .Level }}')
    .crit(lambda: "state_count" >= 5)
    .critReset(lambda: "state_count" <= 1)
    .stateChangesOnly()
    .topic('haystack')


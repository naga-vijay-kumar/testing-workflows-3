# Global tags can be specified here in key="value" format.
[global_tags]
  product = "haystack"
  job = "kinesis"

  # Configuration for telegraf agent
  [agent]
    ## Default data collection interval for all inputs
    interval = "5s"
    ## Rounds collection interval to 'interval'
    ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
    round_interval = true

    ## Telegraf will send metrics to outputs in batches of at
    ## most metric_batch_size metrics.
    metric_batch_size = 1000
    ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
    ## output, and will flush this buffer on a successful write. Oldest metrics
    ## are dropped first when this buffer fills.
    metric_buffer_limit = 10000

    ## Collection jitter is used to jitter the collection by a random amount.
    ## Each plugin will sleep for a random time within jitter before collecting.
    ## This can be used to avoid many plugins querying things like sysfs at the
    ## same time, which can have a measurable effect on the system.
    collection_jitter = "0s"

    ## Default flushing interval for all outputs. You shouldn't set this below
    ## interval. Maximum flush_interval will be flush_interval + flush_jitter
    flush_interval = "5s"
    ## Jitter the flush interval by a random amount. This is primarily to avoid
    ## large write spikes for users running a large number of telegraf instances.
    ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
    flush_jitter = "0s"

  ## By default, precision will be set to the same timestamp order as the
  ## collection interval, with the maximum being 1s.
  ## Precision will NOT be used for service inputs, such as logparser and statsd.
  ## Valid values are "ns", "us" (or "Âµs"), "ms", "s".
  precision = "s"
  ## Run telegraf in debug mode
  debug = false
  ## Run telegraf in quiet mode
  quiet = false
  ## Override default hostname, if empty use os.Hostname()
  # hostname = "pipeline-poller-2"
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# [[outputs.prometheus_client]]
#   listen = ":9273"
#   metric_version = 2
###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# scrape us-east-1 cloudwatch metrics
[[inputs.cloudwatch]]
  region = "us-east-1"
  period = "1m"
  delay = "1m"
  interval = "1m"
  namespace = "AWS/Kinesis"
[[inputs.cloudwatch]]
  region = "us-east-1"
  period = "1m"
  delay = "1m"
  interval = "1m"
  namespace = "HaystackKinesisProducer"
[[inputs.cloudwatch]]
  region = 'us-east-1'
  period = '1m'
  delay = '1m'
  interval = '1m'
  namespace = 'AWS/DynamoDB'

# scrape eu-central-1 cloudwatch metrics
[[inputs.cloudwatch]]
  region = "eu-central-1"
  period = "1m"
  delay = "1m"
  interval = "1m"
  namespace = "AWS/Kinesis"
[[inputs.cloudwatch]]
  region = "eu-central-1"
  period = "1m"
  delay = "1m"
  interval = "1m"
  namespace = "HaystackKinesisProducer"
[[inputs.cloudwatch]]
  region = 'eu-central-1'
  period = '1m'
  delay = '1m'
  interval = '1m'
  namespace = 'AWS/DynamoDB'

# scrape ap-south-1 cloudwatch metrics
[[inputs.cloudwatch]]
  region = "ap-south-1"
  period = "1m"
  delay = "1m"
  interval = "1m"
  namespace = "AWS/Kinesis"
[[inputs.cloudwatch]]
  region = "ap-south-1"
  period = "1m"
  delay = "1m"
  interval = "1m"
  namespace = "HaystackKinesisProducer"
[[inputs.cloudwatch]]
  region = 'ap-south-1'
  period = '1m'
  delay = '1m'
  interval = '1m'
  namespace = 'AWS/DynamoDB'

# scrape ap-southeast-2 cloudwatch metrics
[[inputs.cloudwatch]]
  region = "ap-southeast-2"
  period = "1m"
  delay = "1m"
  interval = "1m"
  namespace = "AWS/Kinesis"
[[inputs.cloudwatch]]
  region = "ap-southeast-2"
  period = "1m"
  delay = "1m"
  interval = "1m"
  namespace = "HaystackKinesisProducer"
[[inputs.cloudwatch]]
  region = 'ap-southeast-2'
  period = '1m'
  delay = '1m'
  interval = '1m'
  namespace = 'AWS/DynamoDB'
